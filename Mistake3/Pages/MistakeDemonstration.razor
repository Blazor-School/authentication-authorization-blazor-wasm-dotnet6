@page "/mistake-demonstration"
@using MistakeGetUserInformationWrongWay.TransferServices
@using MistakeGetUserInformationWrongWay.Utils
@inject MessagingTransferService MessagingTransferService
@inject BlazorSchoolAuthenticationStateProvider BlazorSchoolAuthenticationStateProvider
@implements IDisposable

<h3>MistakeDemonstration</h3>
<div>GetAuthenticationStateAsync called @MessagingTransferService.Counter time(s).</div>
<button type="button" class="btn btn-primary" @onclick="_ => Counter++">Add Component</button>
<button type="button" class="btn btn-primary" @onclick="_ => BlazorSchoolAuthenticationStateProvider.Login(true)">Notify Authentication State Changed</button>

<div class="w-25">
    @for(int i = 0; i < Counter; i++)
    {
        <BadImplementation></BadImplementation>
    }
</div>

@code
{
    public int Counter { get; set; } = 0;
    protected override void OnInitialized()
    {
        MessagingTransferService.MessageReceived += OnMessageReceived;
    }

    public void OnMessageReceived(object? sender, EventArgs eventArgs)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose() => MessagingTransferService.MessageReceived -= OnMessageReceived;
}